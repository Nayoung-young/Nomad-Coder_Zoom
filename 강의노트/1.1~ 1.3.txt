# 1.1 HTTP vs WebSockets
- real time을 가능하게 하는 것? -> WebSocket 
- HTTP와 WebSocket 모두 protocol 

HTTP 
- 유저가 request 보내야 서버가 response 
- 이건 백엔드가 유저를 기억하지 못함 (response를 주면 끝남) 
	- 누구인지 알려주는 cookie를 서버에 보내야함 
	- 이런 방식을 stateless라고 함 
WebSocket (bi-directional)
- wss://nomadcoders.co (웹소켓을 지원한다면) 
- 브라우저가 서버로 request -> accept 또는 거절 가능 
- accept 시 브라우저와 서버가 connect됨, connection 상태라면 
	- 그래서 서버가 유저를 기억할 수 있음 
	- 연결되어있기 때문에 원한다면 서버가 답장할 수 있음 
	- request, respond 과정 불필요 

?? 서버가 답장을 보낸다는 게 어떤 것일까 

# 1.2 WebSockets in NodeJS 
ws라는 라이브러리 (웹소켓의 core 기능이 구현되어있는 라이브러리) 
- 이걸로 public 채팅 기능 만들 것 

- http server가 먼저 열리고, 그 위에 ws 서버가 만들어지도록 코드 작성 

# 1.3 WebSocket Events 
- server.js의 socket: 연결된 브라우저 
- app.js의 socket: 서버로의 연결 

