줌 클론코딩 
# 0.3 Frontend Setup 
<server.js 에서> 
_ pug로 view engine 설정 
	app.set("view engine", "pug") 
- express에 template이 어디 있는지 지정해주고 
	app.set("views", __dirname + "/views/"); 
- public url을 생성해서 유저에게 파일 공유 
	app.use("/public", express.static(__dirname + "/public")); 
- home.pug를 render해주는 route handler 생성 

- 추가로, html 요소들의 디자인을 예쁘게 해주는 css 파일 mvp.css 다운 

# 04 Recap 
지금까지 개발환경 구축 진행 
- Nodemon 설정하기 위해 nodemon.js 설치 
	- Nodemon: 프로젝트 변경사항 발생 -> 서버 자동 재시작
	- 현재 작업본에서는 "exec" -> 서버 재시작 대신 babel-node 실행 
		- babel: 작성한 코드를 일반 NodeJS 코드로 컴파일
		- 그 작업을 server.js 파일에서 진행 
- server.js
	- express import, express 어플리케이션 구성, view engine을 pug로 설정, views 디렉토리 설정
	- public 파일들에 대해서도 같은 작업을 진행 
		- public 파일들: 프론트에서 구동되는 코드 (app.js는 프론트에서 구동되는 js라는 것을 기억) 
		- 유저에게 모두 공개되는 폴더들, 보안을 위해 구분해두는 것 
- 현재로서는 유저가 /public으로 이동할 시 public 폴더 내용을 볼 수 있음 

- 우리 홈페이지로 이동 시 사용될 템플릿 렌더링 
	app.get("/", (req, res) => res.render("home")); 
- home.pug 파일 제일 하단: script(src = "/public/js/app.js") 
	그래서 home 접속 시 자동으로 해당 폴더로 이동(?하게 되는 듯 

# 1.0 Introduction 
- 실시간 기능을 만들겠다! 
- 채팅방을 만든다! 